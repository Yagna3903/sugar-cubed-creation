// prisma/schema.prisma

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")   // pooled (6543) for runtime
  directUrl = env("DIRECT_URL")     // direct (5432) for migrate/studio
}

generator client {
  provider = "prisma-client-js"
}

enum OrderStatus {
  pending
  paid
  fulfilled
  cancelled
}

model Product {
  id          String    @id            // e.g. "h1","h2" from your seed data
  slug        String    @unique        // <-- REQUIRED by /shop and product pages
  name        String
  description String?
  priceCents  Int
  imageUrl    String?
  badges      String[]  @default([])   // text[] in Postgres
  active      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  inventory   Inventory?
  items       OrderItem[]
}

model Inventory {
  productId   String  @id
  stock       Int     @default(0)
  maxPerOrder Int     @default(12)
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id           String       @id @default(cuid())
  email        String
  customerName String
  status       OrderStatus  @default(pending)
  totalCents   Int
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  items        OrderItem[]
}

model OrderItem {
  id              String  @id @default(cuid())
  orderId         String
  productId       String
  qty             Int
  unitPriceCents  Int

  order           Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product         Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@index([orderId])
  @@index([productId])
}
